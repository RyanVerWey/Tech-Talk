import express from 'express';import mongoose from 'mongoose';const router = express.Router();router.get('/', async (req, res) => {  try {    const dbStatus = {      connected: mongoose.connection.readyState === 1,      state: getConnectionState(mongoose.connection.readyState),      host: mongoose.connection.host || 'Unknown',      name: mongoose.connection.name || 'Unknown',      collections: mongoose.connection.readyState === 1 ?         Object.keys(mongoose.connection.collections).length : 0    };    const healthData = {      success: true,      message: 'API is healthy',      timestamp: new Date().toISOString(),      database: dbStatus,      environment: process.env.NODE_ENV || 'development',      uptime: process.uptime(),      version: process.env.npm_package_version || '1.0.0',      memory: process.memoryUsage(),      pid: process.pid,      server: {        port: process.env.PORT || 3002,        ready: true      }    };    const statusCode = dbStatus.connected ? 200 : 503;    res.status(statusCode).json(healthData);  } catch (error) {    res.status(500).json({      success: false,      message: 'Health check failed',      error: error.message,      timestamp: new Date().toISOString()    });  }});function getConnectionState(readyState) {  const states = {    0: 'disconnected',    1: 'connected',     2: 'connecting',    3: 'disconnecting'  };  return states[readyState] || 'unknown';}export default router;
